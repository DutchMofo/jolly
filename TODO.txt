

// Some stackoverflow comment
I wish C/C++ had bit rotations operator e.g. for x86 the @ seems like a best choice with the direction of the rotation > for right, < for left

int a = a @> 1; // generates ror eax,1
int b = b <@ 2; // generates rol eax,2

This would help to get rid of all the compiler instrisics and make more portable code, especially cryptographic libraries where bit rotations are as common as XOR, OR, NOT operators.



#################
	Uncertain
#################

When you call new you get the allocated data and a handle, the
hande guaranteed to be unique by the compiler. The handle is the
owner of the allocated data and when it runs out of scope the data
is deleted. This should resolve memory leaks but forces the you
implement a way storing the handle's.

The problems this method still has is that there still can be 
dangling pointers to the deleted data and it doesn't resolve the
dereferencing off a null pointer.

{
	auto (data, handle) = new i32[123];

	// ...
	
} // <-- handle is out of scope and the "new i32[123]" gets deleted.